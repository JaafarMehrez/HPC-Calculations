#INFO: **** input file is /Users/jmhrzz/HPQC/ForkedRepo/PySCF-PySCF/ATOM/He/He-/UHF/6-31G/inp.py ****
import os, sys, glob, subprocess, textwrap, numpy
import pyscf
from functools import reduce
from pyscf import cc, lib, tools, scf, symm, ao2mo
from pyscf.tools.fcidump import from_mo
from pyscf.tools.fcidump import from_integrals
from pyscf.gto.basis import parse_gaussian
import pyscf.symm.param as param
import pyscf.lib.logger as logger
from subprocess import call
from io import StringIO
name = 'out'
mol = pyscf.M(
    atom = '''
        HE
    ''',
    unit = 'angstrom',
    basis = {
            'HE' : parse_gaussian.load('He-6-31G-EMSL.gbs', 'HE')
    },
    charge = -1,
    spin = 1,
    symmetry = True,
    verbose = 9,
    symmetry_subgroup = 'D2h',
    output = name +'.txt',
    max_memory = 4000,
)
mf = mol.UHF().set(conv_tol=1e-10,max_cycle=999,ddm_tol=1e-13,direct_scf_tol=1e-13,chkfile=name+'.chk',init_guess='atom',irrep_nelec={'Ag':3})
mf.kernel()

'''
mycc = cc.UCCSD(mf).set(conv_tol=1e-10).run()
et = mycc.ccsd_t()
print('CCSD total energy', mycc.e_tot)
print('CCSD(T) total energy', mycc.e_tot + et)
'''

orbs = mf.mo_coeff
nmo = orbs[0].shape[0]
eri_aaaa = pyscf.ao2mo.restore(4,pyscf.ao2mo.incore.general(mf._eri, (orbs[0],orbs[0],orbs[0],orbs[0]), compact=False),nmo)
eri_bbbb = pyscf.ao2mo.restore(4,pyscf.ao2mo.incore.general(mf._eri, (orbs[1],orbs[1],orbs[1],orbs[1]), compact=False),nmo)
eri_aabb = pyscf.ao2mo.restore(4,pyscf.ao2mo.incore.general(mf._eri, (orbs[0],orbs[0],orbs[1],orbs[1]), compact=False),nmo)
h_core = mf.get_hcore(mol)
h_aa = reduce(numpy.dot, (orbs[0].T, h_core, orbs[0]))
h_bb = reduce(numpy.dot, (orbs[1].T, h_core, orbs[1]))
nuc = mol.energy_nuc()
float_format = '% 0.20E'
if mol.symmetry:
        groupname = mol.groupname
        if groupname in ('SO3', 'Dooh'):
            logger.info(mol, 'Lower symmetry from %s to D2h', groupname)
            raise RuntimeError('Lower symmetry from %s to D2h' % groupname)
        elif groupname == 'Coov':
            logger.info(mol, 'Lower symmetry from Coov to C2v')
            raise RuntimeError('''Lower symmetry from Coov to C2v''')
orbsym = pyscf.symm.label_orb_symm(mol,mol.irrep_name,mol.symm_orb,orbs[0])
orbsym = numpy.array(orbsym)
orbsym = [param.IRREP_ID_TABLE[groupname][i]+1 for i in orbsym]
a_inds = [i+1 for i in range(orbs[0].shape[0])]
b_inds = [i+1 for i in range(orbs[1].shape[1])]
nelec = mol.nelec
tol=1e-18
with open('fort.55', 'w') as fout:
        if not isinstance(nelec, (int, numpy.number)):
            ms    = abs(nelec[0] - nelec[1])
            nelec =     nelec[0]  + nelec[1]
        else: ms=0
        fout.write(f"{nmo:1d} {nelec:1d}\n")
        if orbsym is not None and len(orbsym) > 0:
            fout.write(f"{' '.join([str(x) for x in orbsym])}\n")
        else:
            fout.write(f"{' 1' * nmo}\n")
        fout.write(' 150000\n')
        output_format = float_format + ' %5d %5d %5d %5d\n'
        #4-fold symmetry
        kl = 0
        for l in range(nmo):
            for k in range(0, l+1):
                ij = 0
                for i in range(0, nmo):
                    for j in range(0, i+1):
                        if i >= k:
                            if abs(eri_aaaa[ij,kl]) > tol:
                                fout.write(output_format % (eri_aaaa[ij,kl], a_inds[i], a_inds[j], a_inds[k], a_inds[l]))
                        ij += 1
                kl += 1
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        kl = 0
        for l in range(nmo):
            for k in range(0, l+1):
                ij = 0
                for i in range(0, nmo):
                    for j in range(0, i+1):
                        if i >= k:
                            if abs(eri_bbbb[ij,kl]) > tol:
                                fout.write(output_format % (eri_bbbb[ij,kl], b_inds[i], b_inds[j], b_inds[k], b_inds[l]))
                        ij += 1
                kl += 1
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        ij = 0
        for j in range(nmo):
            for i in range(0, j+1):
                kl = 0
                for k in range(nmo):
                    for l in range(0, k+1):
                        if abs(eri_aabb[ij,kl]) > tol:
                            fout.write(output_format % (eri_aabb[ij,kl], a_inds[i], a_inds[j], b_inds[k], b_inds[l]))
                        kl += 1
                ij +=1

        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        h_aa = h_aa.reshape(nmo,nmo)
        h_bb = h_bb.reshape(nmo,nmo)
        output_format = float_format + ' %5d %5d     0     0\n'
        for i in range(nmo):
            for j in range(nmo):
                fout.write(output_format % (h_aa[i,j], a_inds[i], a_inds[j]))
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        for i in range(nmo):
            for j in range(nmo):
                fout.write(output_format % (h_bb[i,j], b_inds[i], b_inds[j]))
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        output_format = float_format + '     0     0     0     0\n'
        fout.write(output_format % nuc)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Mhrzzs-MacBook-Air.local', release='24.1.0', version='Darwin Kernel Version 24.1.0: Thu Oct 10 21:02:45 PDT 2024; root:xnu-11215.41.3~2/RELEASE_ARM64_T8112', machine='arm64')  Threads 1
Python 3.11.10 (main, Sep  7 2024, 01:03:31) [Clang 16.0.0 (clang-1600.0.26.3)]
numpy 2.1.1  scipy 1.14.1  h5py 3.11.0
Date: Sat Nov 16 10:39:31 2024
PySCF version 2.6.2
PySCF path  /Users/jmhrzz/HPQC/PySCF/pyscf-test/lib/python3.11/site-packages/pyscf

[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/sv/p893skhd53z1sh_0fgwlc_0w0000gn/T
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 3
[INPUT] charge = -1
[INPUT] spin (= nelec alpha-beta = 2S) = 1
[INPUT] symmetry True subgroup D2h
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [3    /1   ]  38.421634         0.04013973935
                                5.77803           0.261246097
                                1.241774          0.7931846246
[INPUT] 0    0    [1    /1   ]  0.297964             1

nuclear repulsion = 0
point group symmetry = SO3, use subgroup D2h
symmetry origin: [0. 0. 0.]
symmetry axis x: [1. 0. 0.]
symmetry axis y: [0. 1. 0.]
symmetry axis z: [0. 0. 1.]
num. orbitals of irrep Ag = 2
number of shells = 2
number of NR pGTOs = 4
number of NR cGTOs = 2
basis = {'HE': [[0, [38.421634, 0.04013973935], [5.77803, 0.261246097], [1.241774, 0.7931846246]], [0, [0.297964, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.421634  5.77803   1.241774]
bas 1, expnt(s) = [0.297964]
CPU time:         0.26
arg.atm = [[ 2 20  1 23  0  0]]
arg.bas = [[ 0  0  3  1  0 24 27  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.421634    5.77803     1.241774    1.5650256   2.45979933  2.35733461
  0.297964    1.0189148 ]
ecpbas  = []


******** <class 'pyscf.scf.uhf_symm.SymAdaptedUHF'> ********
method = SymAdaptedUHF
initial guess = atom
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-10
SCF conv_tol_grad = None
SCF ddm_tol = 1e-13
SCF max_cycles = 999
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = out.chk
max_memory 4000 MB (current use 0 MB)
number electrons alpha = 2  beta = 1
irrep_nelec {'Ag': 3}
Freeze 3 electrons in irreps ['Ag']
    0 free electrons in irreps 
cond(S) = 4.466687544238558
Set gradient conv threshold to 1e-05
Spherically averaged atomic HF for {'He'}


******** <class 'pyscf.scf.atom_hf.AtomSphAverageRHF'> ********
method = AtomSphAverageRHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF ddm_tol = 1e-10
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/sv/p893skhd53z1sh_0fgwlc_0w0000gn/T/tmpr2kngjfm
max_memory 4000 MB (current use 0 MB)
atom = He
Set gradient conv threshold to 3.16228e-05
Initial guess from minao.
Nelec from initial guess = 1.9984409373354237
E1 = -3.876120917533518  E_coul = 1.022411038953944
init E= -2.85370987857957
l = 0  e_0 = -0.916375227
l = 0  e_1 = 1.39752391
    CPU time for initialize scf      0.01 sec, wall time      0.01 sec
l = 0  e_0 = -0.916375227
l = 0  e_1 = 1.39752391
l = 0  occ = 1 + 0
l = 1  occ = 0 + 0
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -3.881983177770725  E_coul = 1.0268227706299806
cycle= 1 E= -2.85516040714074  delta_E= -0.00145  |g|=    0  |ddm|= 0.0116
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=0.000403326
diis-c [-1.62672129e-07  1.00000000e+00]
l = 0  e_0 = -0.914168827
l = 0  e_1 = 1.39982526
l = 0  occ = 1 + 0
l = 1  occ = 0 + 0
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -3.88206120767909  E_coul = 1.0269007816335378
cycle= 2 E= -2.85516042604555  delta_E= -1.89e-08  |g|=    0  |ddm|= 0.000318
    CPU time for cycle= 2      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=3.05227e-05
diis-c [-4.53819712e-24 -8.18732662e-02  1.08187327e+00]
l = 0  e_0 = -0.914126629
l = 0  e_1 = 1.39985934
l = 0  occ = 1 + 0
l = 1  occ = 0 + 0
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -3.882067595018851  E_coul = 1.026907168864405
cycle= 3 E= -2.85516042615445  delta_E= -1.09e-10  |g|=    0  |ddm|= 2.6e-05
    CPU time for cycle= 3      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=6.67471e-11
Linear dependence found in DIIS error vectors.
diis-c [ 9.39663610e-17 -3.76057498e-02  4.96921190e-01  5.40684560e-01]
l = 0  e_0 = -0.914126629
l = 0  e_1 = 1.39985934
l = 0  occ = 1 + 0
l = 1  occ = 0 + 0
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -3.8820675950263897  E_coul = 1.026907168871944
cycle= 4 E= -2.85516042615445  delta_E=    0  |g|=    0  |ddm|= 3.07e-11
    CPU time for cycle= 4      0.00 sec, wall time      0.00 sec
l = 0  e_0 = -0.914126629
l = 0  e_1 = 1.39985934
l = 0  occ = 1 + 0
l = 1  occ = 0 + 0
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -3.882067595032331  E_coul = 1.0269071688778857
Extra cycle  E= -2.85516042615445  delta_E=    0  |g|=    0  |ddm|= 3.07e-11
    CPU time for scf_cycle      0.01 sec, wall time      0.01 sec
    CPU time for SCF      0.01 sec, wall time      0.01 sec
Atomic HF for atom  He  converged. SCF energy = -2.85516042615445

Atom He, E = -2.85516042615
Nelec from initial guess = (np.float64(1.0), np.float64(1.0))
E1 = -3.882067595032331  Ecoul = 1.0269071688778857
init E= -2.85516042615445
    CPU time for initialize scf      0.01 sec, wall time      0.01 sec
E1 = -3.970804433396767  Ecoul = 2.515503342472173
cycle= 1 E= -1.45530109092459  delta_E=  1.4  |g|= 0.256  |ddm|= 2.77
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=0.361407
diis-c [-0.13061523  1.        ]
E1 = -3.8762986962228494  Ecoul = 2.383966867499649
cycle= 2 E= -1.4923318287232  delta_E= -0.037  |g|= 0.0707  |ddm|= 0.291
    CPU time for cycle= 2      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=0.0999256
diis-c [ 1.82757941e-17 -3.82151427e-01  1.38215143e+00]
E1 = -3.8297024450031567  Ecoul = 2.334378918466684
cycle= 3 E= -1.49532352653647  delta_E= -0.00299  |g|= 4.3e-16  |ddm|= 0.107
    CPU time for cycle= 3      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=7.35756e-16
Linear dependence found in DIIS error vectors.
diis-c [-3.81639165e-16 -1.25033910e-01  4.52218113e-01  6.72815797e-01]
E1 = -3.829702445003156  Ecoul = 2.3343789184666823
cycle= 4 E= -1.49532352653647  delta_E= -8.88e-16  |g|= 9.44e-16  |ddm|= 7.22e-16
    CPU time for cycle= 4      0.00 sec, wall time      0.00 sec
E1 = -3.8297024450031563  Ecoul = 2.334378918466684
Extra cycle  E= -1.49532352653647  delta_E= 1.33e-15  |g|= 4.16e-17  |ddm|= 7.22e-16
    CPU time for scf_cycle      0.02 sec, wall time      0.02 sec
    CPU time for SCF      0.02 sec, wall time      0.02 sec
converged SCF energy = -1.49532352653647  <S^2> = 0.75  2S+1 = 2
irreps of each MO ['Ag' 'Ag']
