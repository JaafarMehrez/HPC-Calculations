#INFO: **** input file is /Users/jmhrzz/HPQC/ForkedRepo/PySCF-PySCF/ATOM/O/UHF/BasisSets/STO-3G/inp.py ****
import os, sys, glob, subprocess, textwrap, numpy
import pyscf
from functools import reduce
from pyscf import cc, lib, tools, scf, symm, ao2mo
from pyscf.tools.fcidump import from_mo
from pyscf.tools.fcidump import from_integrals
from pyscf.gto.basis import parse_gaussian
import pyscf.symm.param as param
import pyscf.lib.logger as logger
from subprocess import call
from io import StringIO
name = 'out'
mol = pyscf.M(
    atom = '''
        O
    ''',
    unit = 'angstrom',
    basis = {
            'O' : parse_gaussian.load('O-STO-3G.gbs', 'O')
    },
    charge = 0,
    spin = 2,
    symmetry = True,
    verbose = 9,
    symmetry_subgroup = 'D2h',
    output = name +'.txt',
    max_memory = 4000,
)
mf = mol.UHF().set(conv_tol=1e-10,max_cycle=999,ddm_tol=1e-14,direct_scf_tol=1e-13,chkfile=name+'.chk',init_guess='atom',irrep_nelec={'Ag': 4, 'B3u':1 , 'B2u':1 ,'B1u':2 })
mf.kernel()
mycc = cc.UCCSD(mf).set(conv_tol=1e-10).run()
et = mycc.ccsd_t()
print('CCSD total energy', mycc.e_tot)
print('CCSD(T) total energy', mycc.e_tot + et)

orbs = mf.mo_coeff
nmo = orbs[0].shape[0]
eri_aaaa = pyscf.ao2mo.restore(4,pyscf.ao2mo.incore.general(mf._eri, (orbs[0],orbs[0],orbs[0],orbs[0]), compact=False),nmo)
eri_bbbb = pyscf.ao2mo.restore(4,pyscf.ao2mo.incore.general(mf._eri, (orbs[1],orbs[1],orbs[1],orbs[1]), compact=False),nmo)
eri_aabb = pyscf.ao2mo.restore(4,pyscf.ao2mo.incore.general(mf._eri, (orbs[0],orbs[0],orbs[1],orbs[1]), compact=False),nmo)
h_core = mf.get_hcore(mol)
h_aa = reduce(numpy.dot, (orbs[0].T, h_core, orbs[0]))
h_bb = reduce(numpy.dot, (orbs[1].T, h_core, orbs[1]))
nuc = mol.energy_nuc()
float_format = '% 0.20E'
if mol.symmetry:
        groupname = mol.groupname
        if groupname in ('SO3', 'Dooh'):
            logger.info(mol, 'Lower symmetry from %s to D2h', groupname)
            raise RuntimeError('Lower symmetry from %s to D2h' % groupname)
        elif groupname == 'Coov':
            logger.info(mol, 'Lower symmetry from Coov to C2v')
            raise RuntimeError('''Lower symmetry from Coov to C2v''')
orbsym = pyscf.symm.label_orb_symm(mol,mol.irrep_name,mol.symm_orb,orbs[0])
orbsym = numpy.array(orbsym)
orbsym = [param.IRREP_ID_TABLE[groupname][i]+1 for i in orbsym]
a_inds = [i+1 for i in range(orbs[0].shape[0])]
b_inds = [i+1 for i in range(orbs[1].shape[1])]
nelec = mol.nelec
tol=1e-18
with open('fort.55', 'w') as fout:
        if not isinstance(nelec, (int, numpy.number)):
            ms    = abs(nelec[0] - nelec[1])
            nelec =     nelec[0]  + nelec[1]
        else: ms=0
        fout.write(f"{nmo:1d} {nelec:1d}\n")
        if orbsym is not None and len(orbsym) > 0:
            fout.write(f"{' '.join([str(x) for x in orbsym])}\n")
        else:
            fout.write(f"{' 1' * nmo}\n")
        fout.write(' 150000\n')
        output_format = float_format + ' %5d %5d %5d %5d\n'
        #4-fold symmetry
        kl = 0
        for l in range(nmo):
            for k in range(0, l+1):
                ij = 0
                for i in range(0, nmo):
                    for j in range(0, i+1):
                        if i >= k:
                            if abs(eri_aaaa[ij,kl]) > tol:
                                fout.write(output_format % (eri_aaaa[ij,kl], a_inds[i], a_inds[j], a_inds[k], a_inds[l]))
                        ij += 1
                kl += 1
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        kl = 0
        for l in range(nmo):
            for k in range(0, l+1):
                ij = 0
                for i in range(0, nmo):
                    for j in range(0, i+1):
                        if i >= k:
                            if abs(eri_bbbb[ij,kl]) > tol:
                                fout.write(output_format % (eri_bbbb[ij,kl], b_inds[i], b_inds[j], b_inds[k], b_inds[l]))
                        ij += 1
                kl += 1
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        ij = 0
        for j in range(nmo):
            for i in range(0, j+1):
                kl = 0
                for k in range(nmo):
                    for l in range(0, k+1):
                        if abs(eri_aabb[ij,kl]) > tol:
                            fout.write(output_format % (eri_aabb[ij,kl], a_inds[i], a_inds[j], b_inds[k], b_inds[l]))
                        kl += 1
                ij +=1

        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        h_aa = h_aa.reshape(nmo,nmo)
        h_bb = h_bb.reshape(nmo,nmo)
        output_format = float_format + ' %5d %5d     0     0\n'
        for i in range(nmo):
            for j in range(nmo):
                fout.write(output_format % (h_aa[i,j], a_inds[i], a_inds[j]))
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        for i in range(nmo):
            for j in range(nmo):
                fout.write(output_format % (h_bb[i,j], b_inds[i], b_inds[j]))
        fout.write(' 0.00000000000000000000E+00' + '     0     0     0     0\n')
        output_format = float_format + '     0     0     0     0\n'
        fout.write(output_format % nuc)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Mhrzzs-MacBook-Air.local', release='24.1.0', version='Darwin Kernel Version 24.1.0: Thu Oct 10 21:02:45 PDT 2024; root:xnu-11215.41.3~2/RELEASE_ARM64_T8112', machine='arm64')  Threads 1
Python 3.11.10 (main, Sep  7 2024, 01:03:31) [Clang 16.0.0 (clang-1600.0.26.3)]
numpy 2.1.1  scipy 1.14.1  h5py 3.11.0
Date: Thu Nov  7 20:03:44 2024
PySCF version 2.6.2
PySCF path  /Users/jmhrzz/HPQC/PySCF/pyscf-test/lib/python3.11/site-packages/pyscf

[CONFIG] ARGPARSE = False
[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/sv/p893skhd53z1sh_0fgwlc_0w0000gn/T
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = None
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 8
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 2
[INPUT] symmetry True subgroup D2h
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 O      0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] O
[INPUT] 0    0    [3    /1   ]  130.70932         0.1543289
                                23.808861         0.5353281
                                6.4436083         0.4446345
[INPUT] 0    0    [3    /1   ]  5.0331513         -0.0999672
                                1.1695961         0.3995128
                                0.380389          0.7001154
[INPUT] 1    0    [3    /1   ]  5.0331513         0.1559162
                                1.1695961         0.6076837
                                0.380389          0.3919573

nuclear repulsion = 0
point group symmetry = SO3, use subgroup D2h
symmetry origin: [0. 0. 0.]
symmetry axis x: [1. 0. 0.]
symmetry axis y: [0. 1. 0.]
symmetry axis z: [0. 0. 1.]
num. orbitals of irrep Ag = 2
num. orbitals of irrep B1u = 1
num. orbitals of irrep B2u = 1
num. orbitals of irrep B3u = 1
number of shells = 3
number of NR pGTOs = 15
number of NR cGTOs = 5
basis = {'O': [[0, [130.70932, 0.1543289], [23.808861, 0.5353281], [6.4436083, 0.4446345]], [0, [5.0331513, -0.0999672], [1.1695961, 0.3995128], [0.380389, 0.7001154]], [1, [5.0331513, 0.1559162], [1.1695961, 0.6076837], [0.380389, 0.3919573]]]}
ecp = {}
bas 0, expnt(s) = [130.70932    23.808861    6.4436083]
bas 1, expnt(s) = [5.0331513 1.1695961 0.380389 ]
bas 2, expnt(s) = [5.0331513 1.1695961 0.380389 ]
CPU time:         0.25
arg.atm = [[ 8 20  1 23  0  0]]
arg.bas = [[ 0  0  3  1  0 24 27  0]
 [ 0  0  3  1  0 30 33  0]
 [ 0  1  3  1  0 36 39  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.         130.70932
  23.808861     6.4436083   15.0727414   14.57770228   4.54323371
   5.0331513    1.1695961    0.380389    -0.84869681   1.13520079
   0.85675303   5.0331513    1.1695961    0.380389     3.42906463
   2.15628878   0.34159235]
ecpbas  = []


******** <class 'pyscf.scf.uhf_symm.SymAdaptedUHF'> ********
method = SymAdaptedUHF
initial guess = atom
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-10
SCF conv_tol_grad = None
SCF ddm_tol = 1e-14
SCF max_cycles = 999
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = out.chk
max_memory 4000 MB (current use 0 MB)
number electrons alpha = 5  beta = 3
irrep_nelec {'Ag': 4, 'B3u': 1, 'B2u': 1, 'B1u': 2}
Freeze 8 electrons in irreps ['Ag', 'B3u', 'B2u', 'B1u']
    0 free electrons in irreps 
cond(S) = 1.6202153444255252
Set gradient conv threshold to 1e-05
Spherically averaged atomic HF for {'O'}


******** <class 'pyscf.scf.atom_hf.AtomSphAverageRHF'> ********
method = AtomSphAverageRHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF ddm_tol = 1e-10
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/sv/p893skhd53z1sh_0fgwlc_0w0000gn/T/tmp9fdpa5pz
max_memory 4000 MB (current use 0 MB)
atom = O
Set gradient conv threshold to 3.16228e-05
Initial guess from minao.
Nelec from initial guess = 7.8629716670330145
E1 = -101.97003444406707  E_coul = 28.793539741918206
init E= -73.1764947021489
l = 0  e_0 = -20.437304
l = 0  e_1 = -1.21731642
l = 1  e_0 = -0.284164053
    CPU time for initialize scf      0.01 sec, wall time      0.01 sec
l = 0  e_0 = -20.437304
l = 0  e_1 = -1.21731642
l = 1  e_0 = -0.284164053
l = 0  occ = 2 + 0
l = 1  occ = 0 + 1.333
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -102.87935495599696  E_coul = 29.646162719724387
cycle= 1 E= -73.2331922362726  delta_E= -0.0567  |g|=    0  |ddm|= 0.0448
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=1.0392e-14
diis-c [-1.07994692e-28  1.00000000e+00]
l = 0  e_0 = -20.2853339
l = 0  e_1 = -1.12078411
l = 1  e_0 = -0.19369838
l = 0  occ = 2 + 0
l = 1  occ = 0 + 1.333
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -102.87935495599699  E_coul = 29.64616271972439
cycle= 2 E= -73.2331922362726  delta_E= -2.84e-14  |g|=    0  |ddm|= 5.55e-16
    CPU time for cycle= 2      0.00 sec, wall time      0.00 sec
l = 0  e_0 = -20.2853339
l = 0  e_1 = -1.12078411
l = 1  e_0 = -0.19369838
l = 0  occ = 2 + 0
l = 1  occ = 0 + 1.333
l = 2  occ = 0 + 0
l = 3  occ = 0 + 0
E1 = -102.87935495599699  E_coul = 29.64616271972439
Extra cycle  E= -73.2331922362726  delta_E=    0  |g|=    0  |ddm|= 5.55e-16
    CPU time for scf_cycle      0.01 sec, wall time      0.01 sec
    CPU time for SCF      0.01 sec, wall time      0.01 sec
Atomic HF for atom  O  converged. SCF energy = -73.2331922362726

Atom O, E = -73.2331922363
Nelec from initial guess = (np.float64(3.9999999999999996), np.float64(3.9999999999999996))
E1 = -102.87935495599699  Ecoul = 29.64616271972439
init E= -73.2331922362726
    CPU time for initialize scf      0.01 sec, wall time      0.01 sec
E1 = -102.879354955997  Ecoul = 29.07520480558682
cycle= 1 E= -73.8041501504102  delta_E= -0.571  |g|=    0  |ddm|=    1
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
diis-norm(errvec)=2.72358e-15
diis-c [-7.41791177e-30  1.00000000e+00]
E1 = -102.879354955997  Ecoul = 29.075204805586818
cycle= 2 E= -73.8041501504102  delta_E=    0  |g|=    0  |ddm|= 4.44e-16
    CPU time for cycle= 2      0.00 sec, wall time      0.00 sec
E1 = -102.879354955997  Ecoul = 29.075204805586818
Extra cycle  E= -73.8041501504102  delta_E=    0  |g|=    0  |ddm|= 4.44e-16
    CPU time for scf_cycle      0.01 sec, wall time      0.01 sec
    CPU time for SCF      0.01 sec, wall time      0.01 sec
converged SCF energy = -73.8041501504102  <S^2> = 2  2S+1 = 3

******** <class 'pyscf.cc.uccsd.UCCSD'> ********
CC2 = 0
CCSD nocc = (5, 3), nmo = (5, 5)
max_cycle = 50
direct = 0
conv_tol = 1e-10
conv_tol_normt = 1e-06
diis_space = 6
diis_start_cycle = 0
diis_start_energy_diff = 1e+09
max_memory 4000 MB (current use 0 MB)
E1 = -102.879354955997  Ecoul = 29.075204805586818
Init t2, MP2 energy = 0
    CPU time for init mp2      0.00 sec, wall time      0.00 sec
Init E_corr(UCCSD) = 0
    CPU time for vvvv [0:1]      0.00 sec, wall time      0.00 sec
    CPU time for vvvv [1:2]      0.00 sec, wall time      0.00 sec
    CPU time for update t1 t2      0.00 sec, wall time      0.00 sec
DIIS for step 0
cycle = 1  E_corr(UCCSD) = 0  dE = 0  norm(t1,t2) = 0
    CPU time for UCCSD iter      0.00 sec, wall time      0.00 sec
    CPU time for UCCSD      0.00 sec, wall time      0.00 sec
UCCSD converged
E(UCCSD) = -73.80415015041018  E_corr = 0
    CPU time for transpose 0:2      0.00 sec, wall time      0.00 sec
    CPU time for transpose 0:2      0.00 sec, wall time      0.00 sec
    CPU time for UCCSD(T) sort_eri      0.00 sec, wall time      0.00 sec
max_memory 4000 MB (0 MB in use)
    CPU time for contract_aaa      0.00 sec, wall time      0.00 sec
max_memory 4000 MB (0 MB in use)
    CPU time for contract 0:2,0:2      0.00 sec, wall time      0.00 sec
    CPU time for contract_bbb      0.00 sec, wall time      0.00 sec
